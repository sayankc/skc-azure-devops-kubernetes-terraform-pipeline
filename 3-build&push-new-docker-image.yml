trigger:
- master

resources:
- repo: self

# variables:
# - group: my-variable-grp-1
# - name: image-Build-BuildId
#   value: '$(Build.BuildId)'

variables:
  tag: '$(Build.BuildId)'
# '$(Build.BuildId)'
  
# '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: update index file
      inputs:
        targetType: 'inline'
        script: |

          echo 'Hello before'
          ls -l
          echo "Hello skc-nginx. Deployment $(tag)" 
          echo "Hello skc-nginx. Deployment $(tag)" >$(System.DefaultWorkingDirectory)/index.html
          
          echo 'Hello after'
          ls -l
    - task: Docker@2
      displayName: build docker image
      inputs:
        containerRegistry: 'docker-hub-svc-con'
        repository: 'myreposayankc/skcnginx'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - task: CopyFiles@2
      displayName: copy artifacts for publish
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'artifact-4-k8-deploy'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Pipeline Artifact
      inputs:
        buildType: 'current'
        artifactName: 'artifact-4-k8-deploy'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'
    - task: Bash@3
      displayName: view content
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          cd $(System.ArtifactsDirectory)
          ls -l
    - task: KubernetesManifest@0
      displayName: Deploy Pod
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'az-k8-cluster-svc-connection-2'
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/configuration/kubernetes/deployment.yaml'
        containers: 'myreposayankc/skcnginx:$(tag)'
    # - task: Kubernetes@1
    #   displayName: delete LB Service
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'az-k8-cluster-svc-connection-2'
    #     namespace: 'default'
    #     command: 'delete'
    #     arguments: 'svc -l app=skc-app-1'
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'
    # - task: Kubernetes@1
    #   displayName: Recreate LB Service
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'az-k8-cluster-svc-connection-2'
    #     namespace: 'default'
    #     command: 'apply'
    #     arguments: '-f $(System.ArtifactsDirectory)/configuration/kubernetes/service.yaml'
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'

    # - task: Kubernetes@1
    #   displayName: Describe LB Service
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'az-k8-cluster-svc-connection-2'
    #     namespace: 'default'
    #     command: 
    #     useConfigurationFile: true
    #     configurationType: 'inline'
    #     inline: 'kubectl describe svc skc-svc-1 | grep -i Ingress | awk ''{print $3}'''
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'