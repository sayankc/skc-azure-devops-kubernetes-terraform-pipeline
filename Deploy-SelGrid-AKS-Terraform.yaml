# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: DownloadSecureFile@1
  name: skcpublickey
  inputs:
    secureFile: 'sayankc_azure_rsa.pub'
- task: Bash@3
  displayName: "Verify Files"
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      pwd
      cd $(System.DefaultWorkingDirectory)/configuration/kubernetes/sel.grid/viaTF/
      
      ls -l
- task: TerraformCLI@0
  displayName: "terraform init"
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/kubernetes/sel.grid/viaTF/'
    backendType: 'azurerm'
    backendServiceArm: 'skc-Azure-resource-mngr-service-connection-1'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'az-tf-backend'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'skcstoragetfbackend01'
    backendAzureRmStorageAccountSku: 'Standard_LRS'
    backendAzureRmContainerName: 'tfbackend01container'
    backendAzureRmKey: 'tfgridbackend01.tfstate'
    allowTelemetryCollection: false

- task: TerraformCLI@0
  displayName: "Deploy Grid"
  inputs:
    command: 'apply'
    environmentServiceName: 'skc-Azure-resource-mngr-service-connection-1'
    allowTelemetryCollection: false