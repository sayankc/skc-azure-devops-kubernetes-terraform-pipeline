trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: DownloadSecureFile@1
  name: skcpublickey
  inputs:
    secureFile: 'sayankc_azure_rsa.pub'
- task: TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    #commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(skcpublickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'skc-Azure-resource-mngr-service-connection-1'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'az-tf-backend'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'skcstoragetfbackend01'
    backendAzureRmStorageAccountSku: 'Standard_LRS'
    backendAzureRmContainerName: 'tfbackend01container'
    backendAzureRmKey: 'tfbackend01container.tfstate'
    allowTelemetryCollection: false


- task: TerraformCLI@0
  displayName: 'terraform destroy cluster'
  inputs:
    command: 'destroy'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'skc-Azure-resource-mngr-service-connection-1'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(skcpublickey.secureFilePath)'
    allowTelemetryCollection: false